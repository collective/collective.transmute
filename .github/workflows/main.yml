name: collective.transmute CI

on:
  push:

jobs:

  config:
    name: "Compute configuration values"
    uses: ./.github/workflows/config.yml

  docs:
    name: "Generate documentation"
    uses: plone/meta/.github/workflows/docs-build.yml@2.x
    needs:
      - config
    with:
      python-version: ${{ needs.config.outputs.python-version }}
      working-directory: "docs"
      check-links: true
      check-vale: true

  lint:
    name: "Lint codebase"
    uses: plone/meta/.github/workflows/backend-lint.yml@2.x
    needs:
      - config
    with:
      python-version: ${{ needs.config.outputs.python-version }}
      plone-version:  ${{ needs.config.outputs.plone-version }}
      check-typing: true

  test:
    name: "Test codebase"
    uses: plone/meta/.github/workflows/backend-pytest.yml@2.x
    needs:
      - config
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13", "3.12"]
        plone-version: ["6.1-latest"]
    with:
      python-version: ${{ matrix.python-version }}
      plone-version: ${{ matrix.plone-version }}

  coverage:
    name: "Test Coverage"
    uses: plone/meta/.github/workflows/backend-pytest-coverage.yml@2.x
    needs:
      - config
      - test
    with:
      python-version: ${{ needs.config.outputs.python-version }}
      plone-version:  ${{ needs.config.outputs.plone-version }}

  docs-deploy:
    name: "Deploy documentation"
    uses: ./.github/workflows/docs-deploy.yml
    needs:
      - config
      - docs
    with:
      python-version: ${{ needs.config.outputs.python-version }}
      working-directory: "docs"
  report:
    name: "Final report"
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs:
      - config
      - lint
      - test
      - docs
      - docs-deploy
      - coverage
    steps:
      - name: Report
        shell: bash
        run: |
          echo '# Workflow Report' >> $GITHUB_STEP_SUMMARY
          echo '| Job ID | Conclusion |' >> $GITHUB_STEP_SUMMARY
          echo '| --- | --- |' >> $GITHUB_STEP_SUMMARY
          echo '| Config | ${{ needs.config.result }} |' >> $GITHUB_STEP_SUMMARY
          echo '| Lint | ${{ needs.lint.result }} |' >> $GITHUB_STEP_SUMMARY
          echo '| Test | ${{ needs.test.result }} |' >> $GITHUB_STEP_SUMMARY
          echo '| Coverage | ${{ needs.coverage.result }} |' >> $GITHUB_STEP_SUMMARY
          echo '| Docs | ${{ needs.docs.result }} |' >> $GITHUB_STEP_SUMMARY
          echo '| Docs Deployment | ${{ needs.docs-deploy.result }} |' >> $GITHUB_STEP_SUMMARY
